file->new ->spring starter project
--------------------------Example-1--------------------
Test1.java
----------------------
package com.example.demo;

import org.springframework.stereotype.Component;

//ctrl+shift+O
@Component("test")
public class Test1 
{
public void welcome()
{
	System.out.println("welcome to Rest WebServices");
}
public int sum(int a,int b)
{
	return a+b;
}

public int sub(int a,int b)
{
	return a-b;
}

}
------------------------------------------------------------------------------------------
Test2.java
----------------------
package com.example.demo;

import org.springframework.stereotype.Component;

//ctrl+shift+O
@Component("test1")
public class Test2 
{
public void welcomeMphasis()
{
	System.out.println("welcome to Rest WebServices Mphasis Batch215");
}
public int mul(int a,int b)
{
	return a*b;
}

public int div(int a,int b)
{
	return a / b;
}

}
---------------------------------------------------------------------------------------------------
Test3.java
----------------------
package com.example.demo;

import org.springframework.stereotype.Component;

@Component("test2")
public class Test3 
{
public int square(int i)
{
	return i*i;
}
}
----------------------------------------------------------------------
package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;
import java.util.*;
@SpringBootApplication
public class SpringBootBatch215ex1Application {
	//ctrl+shift+O
	public static void main(String[] args)
	{
		ApplicationContext ac=SpringApplication.run(SpringBootBatch215ex1Application.class, args);
		Test1 obj=ac.getBean("test",Test1.class);
		obj.welcome();
		System.out.println("the sum is "+obj.sum(5, 6));
		System.out.println("the sub is "+obj.sub(7,3));
		
		Test2 obj1=ac.getBean("test1",Test2.class);
		obj1.welcomeMphasis();
		System.out.println("the mul is "+obj1.mul(6, 7));
		System.out.println("the div is "+obj1.div(14,7));
		
		Scanner ob=new Scanner(System.in);
		System.out.println("Enter a no");
		int i=ob.nextInt();
		Test3 ob3=ac.getBean("test2",Test3.class);
		System.out.println("the square is :"+ob3.square(i));	
		}

}
-------------------------------------------------------------------------
ApplicationContext is a container to create a object for the class.
It has a method class getBean() which will accept the class name and object name as parameter.
This is assigned to another object .with this object we can access the methods of the class.


example:- @Component("test") :- test is a object of the class Test1.
So it will create object for the class Test1.
-------------------------------Example-2------------------------------------------------------------
package com.example.demo;

import org.springframework.stereotype.Component;

@Component("emp")
public class Employee 
{
int empno;
String name;
float sal;
void input(int empno,String name,float sal)
{
	this.empno=empno;
	this.name=name;
	this.sal=sal;
}
void display()
{
	System.out.println("the empno is "+empno);
	System.out.println("the name is "+name);
	System.out.println("the salary is "+sal);
	}
}
----------------------------------------------------------------------------
package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;
import java.util.*;
@SpringBootApplication
public class SpringBootBatch215ex1Application {
	//ctrl+shift+O
	public static void main(String[] args)
	{
		ApplicationContext ac=SpringApplication.run(SpringBootBatch215ex1Application.class, args);
		Test1 obj=ac.getBean("test",Test1.class);
		obj.welcome();
		System.out.println("the sum is "+obj.sum(5, 6));
		System.out.println("the sub is "+obj.sub(7,3));
		
		Test2 obj1=ac.getBean("test1",Test2.class);
		obj1.welcomeMphasis();
		System.out.println("the mul is "+obj1.mul(6, 7));
		System.out.println("the div is "+obj1.div(14,7));
		
		Scanner ob=new Scanner(System.in);
		System.out.println("Enter a no");
		int i=ob.nextInt();
		Test3 ob3=ac.getBean("test2",Test3.class);
		System.out.println("the square is :"+ob3.square(i));	
		
		System.out.println("Enter a empno,name,salary");
		int empno=ob.nextInt();
		String name=ob.next();
		float sal=ob.nextFloat();
		Employee obj3=ac.getBean("emp",Employee.class);
				
		obj3.input(empno, name, sal);
		obj3.display();
				
		}

}
-----------------------------------------------------Assignment-1---------------------------------------
create a application Bank
create 2 methods input() and display();
accno,name,balance,address
Take input from the user.
----------------------------------------------------------------------
create a new springStaterProject

create a application Student
create 2 methods input() and display();
rollno,name,address,marks (phy,chem,bio),find total and average.
if avg > 75 "First"
if avg > 65 "Second"
if avg > 55 "Third"
else
"fail"
Take input from the user.
----------------------------------SpringMVC----------------------------------------


@GetMapping("/login")------------http://localhost:8090/login
it will display the login page
---------------------------------------------------------------------------------------------
@GetMapping("/Register")------------http://localhost:8090/Register
it will display the Register page
------------------------------------Example-1------------------------------------------------------------
step 1:- file ---new ---spring stater project.
step-2:- goto webapp--->
step-3:-create a folder ----WEB-INF
step-4:-inside that create a folder---view
step-5:-inside that create login.jsp and register.jsp files. 
--------------------------------
Register.jsp
-----------------
<html>
<title>Employee Registration Page</title>
</head>
<body>
<h1><center>Employee Registration Page</center></h1><hr>
<form action=second>
<table>
<tr><td>Enter your name<td><input type=text name=t1 size=20></td></tr>
<tr><td>Enter your address<td><input type=address name=t2 size=20></td></tr>
<tr><td>Enter your phoneno<td><input type=text name=t3 size=20></td></tr>
<tr><td>Enter your email<td><input type=address name=t4 size=20></td></tr>
<tr><td>Enter your salary<td><input type=text name=t5 size=20></td></tr>
<tr><td>Enter your designation<td><input type=address name=t6 size=20></td></tr>
<tr><td><td><input type=submit value=submit></td></tr>
</table>
</form>
</body>
</html>
---------------------------------
login.jsp
------------------
<!DOCTYPE html>
<html>
<title>Employee Login Page</title>
<body>
<h1><center>Employee Login Page</center></h1><hr>
<form action=login>
<table>
<tr><td>Enter username<td><input type=text name=t1 size=20></td></tr>
<tr><td>Enter password<td><input type=password name=t2 size=20></td></tr>
<tr><td><td><input type=submit value=submit></td></tr>
</table>
</form>
</body>
</html>
--------------------------------------------------------------------------------------------
TestController.java
----------------------
package com.example.demo;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class TestController
{

	@GetMapping("/show")
	public String showLogin()
	{
		return "login";
	}
	
	@GetMapping("/show1")
	public String showRegister()
	{
		return "register";
	}
}
-----------------------------------------------------------------------
properties files
-----------------------
server.port=8090

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
---------------------------------------------------------pom.xml-------------------
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
--------------------------------------------------------------------------------------------------------
package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SpringBootMvCexample1Application {

	public static void main(String[] args) {
		SpringApplication.run(SpringBootMvCexample1Application.class, args);
	}

}
------------------------------------------------------------











